#   Cartographer Bed Scanner
#####################################################################

[mcu scanner]
canbus_uuid: 
#serial: /dev/serial/by-id/usb-cartographer_cartographer_
#    adjust to suit your scanner, if using usb change to serial

[scanner]
mcu: scanner            
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 21.2                         
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
mesh_runs: 2
#    Number of passes to make during mesh scan.

[bed_mesh]
zero_reference_position: 87, 90    
#    set this to the middle of your bed
speed: 250
#    movement speed of toolhead during bed mesh
horizontal_move_z: 5
#    height of scanner during bed mesh scan
mesh_min: 13, 21.2
#    start point of bed mesh [X, Y]
mesh_max: 160, 140
#    end point of bed mesh [X, Y]
probe_count: 15, 15
algorithm: bicubic

[adxl345]
cs_pin: scanner: PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
#accel_per_hz: 125
probe_points:
    87, 90, 20

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105


[homing_override]
axes: xyz
set_position_z: 0
gcode:
   G90
   G0 Z5 F600
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    G28 X
    M117 "HOME X"
  {% endif %}

  {% if home_all or 'Y' in params %}
    G91
    G1 X-80 F5000
    G28 Y
    M117 "HOME Y"
  {% endif %}

  {% if home_all or 'Z' in params %}
    G90
    G1 X87.5 Y90 F5000
    G28 Z
    M117 "HOME Z"
    G1 Z20
  {% endif %}
